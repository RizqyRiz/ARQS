local GAME_CONTROLLER = require("main.module.game_controller")
local ADDR = GAME_CONTROLLER.address

function set_npc(v)
	http.request(ADDR .. "api/arqs/game/character/" .. v.gameobject, "GET", function(self, id, response)
		if response.status == 200 or response.status == 304 then
			local data = response.response
			local npc_data = json.decode(data)

			for i, v in ipairs(npc_data) do
				local npc_visuals = json.decode(v.Visuals)
				--pprint(npc_visuals)
				local gender = npc_visuals.gender
				local age = npc_visuals.age
				local prototype = ""
				if gender == "male" then
					if age == "adult" then
						prototype = "/main/game/quest/prototypes/NPC/male_adult_prototype.goc"
					else
						prototype = "/main/game/quest/prototypes/NPC/male_kid_prototype.goc"
					end
				else
					if age == "adult" then
						prototype = "/main/game/quest/prototypes/NPC/female_adult_prototype.goc"
					else
						prototype = "/main/game/quest/prototypes/NPC/female_kid_prototype.goc"
					end
				end
				GAME_CONTROLLER.addNPCs(v.NPCID, v.Name:gsub("%%20", " "), v.Background:gsub("%%20", " "), gender, age, prototype, npc_visuals)
			end
		end
	end)
end

function set_items(v)
	http.request(ADDR .. "api/arqs/game/item/" .. v.gameobject, "GET", function(self, id, response)
		if response.status == 200 or response.status == 304 then
			local data = response.response
			local item_data = json.decode(data)

			for i, v in ipairs(item_data) do
				-- pprint(v.IID, v.Name:gsub("%%20", " "), v.Description:gsub("%%20", " "), v.Link, v.Readable, v.Destroyable, v.Content)
				local prototype = "/main/game/quest/prototypes/item/item_prototype.goc"
				
				GAME_CONTROLLER.addItems(v.IID, v.Name:gsub("%%20", " "), v.Description:gsub("%%20", " "), v.Link, v.Readable, v.Destroyable, v.Content, prototype)
			end
		end
	end)
end

function init(self)
	http.request(ADDR .. "api/arqs/game/quest/" .. GAME_CONTROLLER.gameId, "GET", function(self, id, response)
		if response.status == 200 or response.status == 304 then
			local json_data = response.response
			local quest_table = json.decode(json_data)
			--GAME_CONTROLLER.setQuestTable(quest_table)
			local quest_data = {}
			local quest_id = ""

			for i, v in ipairs(quest_table) do
				quest_data = json.decode(v.Json)
				quest_id = v.QID
				quest_initiator = quest_data.initiator
				GAME_CONTROLLER.setQuestData(quest_initiator, quest_id, quest_data)
			end

			for i, v in ipairs(quest_data.tasks) do
				for i, v in ipairs(v.gameobjects) do
					GAME_CONTROLLER.setQuestObjects(v.gameobject, v.location, v.area, v.x, v.y, v.foreaft, v.inside_object, quest_id)
					if string.sub(v.gameobject, 1, 3) == "NPC" then
						set_npc(v)
					end
					if string.sub(v.gameobject, 1, 3) == "IID" then
						local prototype = ""
						if v.inside_object == "true" then
							
						end
						set_items(v)
					end
				end
			end
		else
			print("Error: " .. response.status)
		end
	end)
end
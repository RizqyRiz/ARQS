function init(self)
	msg.post(".", "acquire_input_focus")
	local screen_width, screen_height = window.get_size()
	
	http.request("http://localhost:3000/games", "GET", function(self, _, response)
		if response.status == 200 or response.status == 304 then
			local json_data = response.response
			local data_table = json.decode(json_data)

			for key, value in pairs(data_table) do
				-- print(key, value.Name, value.GID)
				local node_pos = vmath.vector3(screen_width / 2, screen_height / 2 - (key - 1) * 80, 0)
				
				local node = gui.new_box_node(node_pos, vmath.vector3(256, 64, 0))
				gui.set_texture(node, "menu_ui")
				gui.play_flipbook(node, "blue_button13")
				
				local text_node = gui.new_text_node(vmath.vector3(0, 0, 0), value.Name)
				gui.set_color(text_node, vmath.vector4(0, 0, 0, 1))
				gui.set_parent(text_node, node)
			end
		else
			print("Error: " .. response.status)
		end
	end)
end

function final(self)
	msg.post(".", "release_input_focus")
end

-- function on_input(self, action_id, action)
-- 	if action_id == hash("touch") and action.pressed then
-- 		local root_node = gui.get_node("gui_root")
-- 		local node = gui.pick_node(root_node, action.x, action.y)
-- 		if node then
-- 			-- Traverse the children of the parent node to find the desired node
-- 			local parent_node = gui.get_parent(node)
-- 			local child_nodes = gui.get_children(parent_node)
-- 			for _, child_node in ipairs(child_nodes) do
-- 				if child_node == node then
-- 					-- Unload the current collection
-- 					msg.post("@collection", "unload")
-- 
-- 					-- Load the new collection
-- 					msg.post("@system", "load", { url = hash("game") })
-- 					break
-- 				end
-- 			end
-- 		end
-- 	end
-- end
